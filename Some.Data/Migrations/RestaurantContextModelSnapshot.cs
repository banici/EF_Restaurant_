// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Some.Data;
using System;

namespace Some.Data.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    partial class RestaurantContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Some.Domain.Chef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Chefs");
                });

            modelBuilder.Entity("Some.Domain.ChefSignatureDish", b =>
                {
                    b.Property<int>("ChefId");

                    b.Property<int>("SignatureDishId");

                    b.HasKey("ChefId", "SignatureDishId");

                    b.HasIndex("SignatureDishId");

                    b.ToTable("ChefSignatureDishes");
                });

            modelBuilder.Entity("Some.Domain.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GuestReview");

                    b.Property<int>("MichelinStar");

                    b.Property<int>("OrdinaryStar");

                    b.Property<int>("RestaurantId");

                    b.Property<int>("SignatureDishId");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId")
                        .IsUnique();

                    b.HasIndex("SignatureDishId")
                        .IsUnique();

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Some.Domain.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("Some.Domain.RestaurantSignatureDish", b =>
                {
                    b.Property<int>("RestaurantId");

                    b.Property<int>("SignatureDishId");

                    b.HasKey("RestaurantId", "SignatureDishId");

                    b.HasIndex("SignatureDishId");

                    b.ToTable("RestaurantSignatureDishes");
                });

            modelBuilder.Entity("Some.Domain.SignatureDish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SignatureDishes");
                });

            modelBuilder.Entity("Some.Domain.ChefSignatureDish", b =>
                {
                    b.HasOne("Some.Domain.Chef", "Chef")
                        .WithMany("SignatureDishes")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Some.Domain.SignatureDish", "SignatureDish")
                        .WithMany("Chefs")
                        .HasForeignKey("SignatureDishId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Some.Domain.Rating", b =>
                {
                    b.HasOne("Some.Domain.Restaurant", "TheRestaurant")
                        .WithOne("Rating")
                        .HasForeignKey("Some.Domain.Rating", "RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Some.Domain.SignatureDish", "TheSignatureDish")
                        .WithOne("Rating")
                        .HasForeignKey("Some.Domain.Rating", "SignatureDishId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Some.Domain.RestaurantSignatureDish", b =>
                {
                    b.HasOne("Some.Domain.Restaurant", "Restaurant")
                        .WithMany("SignatureDishes")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Some.Domain.SignatureDish", "SignatureDish")
                        .WithMany("Restaurants")
                        .HasForeignKey("SignatureDishId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
